{"ast":null,"code":"import _objectSpread from\"/Users/chenyuda/Documents/top-interview/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/chenyuda/Documents/top-interview/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./App.css';import Header from'./components/Header';import Search from'./components/Search';import History from'./components/History';import getWeather from'./apis/getWeather';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initResultState={description:'',main_description:'',humidity:-1,temp_max:-1,temp_min:-1,dateTime:''};function App(){console.log('main render');var _useState=useState(initResultState),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),init=_useState6[0],setInit=_useState6[1];var dataParser=function dataParser(data){var weather=data.weather,main=data.main,sys=data.sys,name=data.name,cod=data.cod;var _weather$=weather[0],description=_weather$.description,main_description=_weather$.main;var humidity=main.humidity,temp_max=main.temp_max,temp_min=main.temp_min;var country=sys.country;var dateTime=new Date().toLocaleString();return{city:name,country:country,description:description,main_description:main_description,humidity:humidity,temp_max:temp_max,temp_min:temp_min,dateTime:dateTime,cod:cod};};var handleSearch=function handleSearch(city,country){setIsLoading(true);getWeather(city,country).then(function(res){setIsLoading(false);setResult(dataParser(res.data));localStorage.setItem(\"data_\".concat(Date.now()),JSON.stringify(_objectSpread(_objectSpread({},dataParser(res.data)),{},{city:city,country:country})));}).catch(function(err){var _err$response$data=err.response.data,cod=_err$response$data.cod,message=_err$response$data.message;setResult({cod:cod,message:message});setIsLoading(false);});setInit(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Search,{result:result,handleSearch:handleSearch,init:init,isLoading:isLoading}),/*#__PURE__*/_jsx(History,{setResult:setResult,handleSearch:handleSearch,result:result})]});}export default App;","map":{"version":3,"sources":["/Users/chenyuda/Documents/top-interview/src/App.js"],"names":["React","useState","Header","Search","History","getWeather","initResultState","description","main_description","humidity","temp_max","temp_min","dateTime","App","console","log","result","setResult","isLoading","setIsLoading","init","setInit","dataParser","data","weather","main","sys","name","cod","country","Date","toLocaleString","city","handleSearch","then","res","localStorage","setItem","now","JSON","stringify","catch","err","response","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport History from './components/History';\nimport getWeather from './apis/getWeather'\n\nconst initResultState = { description: '', main_description: '', humidity: -1, temp_max: -1, temp_min: -1, dateTime: '' }\n\nfunction App() {\n  console.log('main render')\n  const [result, setResult] = useState(initResultState)\n  const [isLoading, setIsLoading] = useState(false)\n  const [init, setInit] = useState(true)\n\n  const dataParser = (data) => {\n    const { weather, main, sys, name, cod } = data\n    const { description, main: main_description } = weather[0]\n    const { humidity, temp_max, temp_min } = main\n    const { country } = sys\n    const dateTime = new Date().toLocaleString()\n    return { city: name, country, description, main_description, humidity, temp_max, temp_min, dateTime, cod }\n  }\n\n  const handleSearch = (city, country) => {\n    setIsLoading(true)\n    getWeather(city, country)\n      .then((res) => {\n        setIsLoading(false)\n        setResult(dataParser(res.data))\n        localStorage.setItem(`data_${Date.now()}`, JSON.stringify({ ...dataParser(res.data), city, country }))\n      }).catch((err) => {\n        const { cod, message } = err.response.data\n        setResult({ cod, message })\n        setIsLoading(false)\n      });\n    setInit(false)\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Search\n        result={result}\n        handleSearch={handleSearch}\n        init={init}\n        isLoading={isLoading} />\n      <History\n        setResult={setResult}\n        handleSearch={handleSearch}\n        result={result}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}