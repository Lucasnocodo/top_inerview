{"ast":null,"code":"var _jsxFileName = \"/Users/chenyuda/Documents/top-interview/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useLayoutEffect, useState, memo, useCallback } from 'react';\nimport Skeleton from './Skeleton';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initSearchState = {\n  inputCity: '',\n  inputCountry: ''\n};\nexport default _c2 = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(function Search(_ref) {\n  _s();\n\n  let {\n    result,\n    handleSearch,\n    init,\n    isLoading\n  } = _ref;\n  console.log('search render');\n  const [searchData, setSearchData] = useState(initSearchState);\n  const targetRef = useRef();\n  const [containerWidth, setContainerWidth] = useState(0);\n  console.log('containerWidth', containerWidth);\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      setContainerWidth(targetRef.current.offsetWidth);\n    }\n  }, []);\n  let {\n    inputCity,\n    inputCountry\n  } = searchData;\n  const {\n    city,\n    country,\n    description,\n    main_description,\n    humidity,\n    temp_max,\n    temp_min,\n    dateTime\n  } = result;\n  const inputs = [{\n    title: 'City',\n    key: 'inputCity',\n    value: inputCity\n  }, {\n    title: 'Country',\n    key: 'inputCountry',\n    value: inputCountry\n  }];\n  const resultData = useCallback(() => [{\n    title: 'Description',\n    unit: '',\n    value: description\n  }, {\n    title: 'Temperature',\n    unit: 'Â°C',\n    value: temp_min,\n    value2: temp_max\n  }, {\n    title: 'Humidity',\n    unit: '%',\n    value: humidity\n  }, {\n    title: 'Time',\n    unit: '',\n    value: dateTime\n  }], [dateTime, description, humidity, temp_max, temp_min]);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearchData(pre => ({ ...pre,\n      [name]: value\n    }));\n  };\n\n  const handleClear = () => {\n    setSearchData(initSearchState);\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch(inputCity, inputCountry);\n    }\n  };\n\n  const renderResult = useCallback(() => {\n    if (init) return null;\n    if (isLoading) return /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 31\n    }, this);\n    const {\n      cod,\n      message\n    } = result;\n\n    if (cod === 200) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"light\",\n          children: [city, \",\", country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"main-description\",\n          children: main_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), resultData().map(_ref2 => {\n          let {\n            title,\n            unit,\n            value,\n            value2\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-col light\",\n              children: [title, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-value\",\n              children: value2 ? `${value}${unit} ~ ${value2}${unit}` : `${value}${unit}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, title, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"err-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, this);\n    }\n  }, [city, country, init, isLoading, main_description, result, resultData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    ref: targetRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [inputs.map(_ref3 => {\n        let {\n          title,\n          key,\n          value\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: /*#__PURE__*/_jsxDEV(ResposeInput, {\n            title: title,\n            containerWidth: containerWidth,\n            handleInputChange: handleInputChange,\n            value: value,\n            name: key,\n            handleKeyDown: handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box button-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSearch(inputCity, inputCountry),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClear(),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), renderResult()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}, \"zAoFSOP6pPD+io78Jtz1SwHgs0I=\")), \"zAoFSOP6pPD+io78Jtz1SwHgs0I=\");\n\nconst ResposeInput = _ref4 => {\n  let {\n    containerWidth,\n    value,\n    handleInputChange,\n    handleKeyDown,\n    name,\n    title\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [containerWidth > 600 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"input-name\",\n      children: [title, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: e => handleInputChange(e),\n      name: name,\n      autoFocus: title === 'City',\n      onKeyDown: handleKeyDown,\n      placeholder: containerWidth > 600 ? '' : title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = ResposeInput;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");\n$RefreshReg$(_c3, \"ResposeInput\");","map":{"version":3,"sources":["/Users/chenyuda/Documents/top-interview/src/components/Search.jsx"],"names":["React","useRef","useLayoutEffect","useState","memo","useCallback","Skeleton","initSearchState","inputCity","inputCountry","Search","result","handleSearch","init","isLoading","console","log","searchData","setSearchData","targetRef","containerWidth","setContainerWidth","current","offsetWidth","city","country","description","main_description","humidity","temp_max","temp_min","dateTime","inputs","title","key","value","resultData","unit","value2","handleInputChange","e","name","target","pre","handleClear","handleKeyDown","renderResult","cod","message","map","ResposeInput"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect, useState, memo, useCallback } from 'react';\nimport Skeleton from './Skeleton';\nimport './Search.css'\n\nconst initSearchState = { inputCity: '', inputCountry: '' }\n\nexport default memo(function Search({ result, handleSearch, init, isLoading }) {\n    console.log('search render')\n    const [searchData, setSearchData] = useState(initSearchState)\n    const targetRef = useRef();\n    const [containerWidth, setContainerWidth] = useState(0);\n\n    console.log('containerWidth', containerWidth)\n    useLayoutEffect(() => {\n        if (targetRef.current) {\n            setContainerWidth(targetRef.current.offsetWidth);\n        }\n    }, []);\n\n    let { inputCity, inputCountry } = searchData\n    const { city, country, description, main_description, humidity, temp_max, temp_min, dateTime } = result\n    const inputs = [\n        {\n            title: 'City',\n            key: 'inputCity',\n            value: inputCity,\n        },\n        {\n            title: 'Country',\n            key: 'inputCountry',\n            value: inputCountry,\n        },\n    ]\n    const resultData = useCallback(() => [\n        {\n            title: 'Description',\n            unit: '',\n            value: description\n        },\n        {\n            title: 'Temperature',\n            unit: 'Â°C',\n            value: temp_min,\n            value2: temp_max,\n        },\n        {\n            title: 'Humidity',\n            unit: '%',\n            value: humidity\n        },\n        {\n            title: 'Time',\n            unit: '',\n            value: dateTime\n        },\n\n    ], [dateTime, description, humidity, temp_max, temp_min])\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target\n        setSearchData((pre) => ({ ...pre, [name]: value }))\n    }\n\n    const handleClear = () => {\n        setSearchData(initSearchState)\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch(inputCity, inputCountry)\n        }\n    }\n\n    const renderResult = useCallback(() => {\n        if (init) return null\n        if (isLoading) return <Skeleton />\n        const { cod, message } = result\n        if (cod === 200) {\n            return (\n                <div className='result-box' >\n                    <span className='light'>{city},{country}</span>\n                    <p className='main-description'>{main_description}</p>\n                    {resultData().map(({ title, unit, value, value2 }) => {\n                        return (\n                            <div className=\"result-item\" key={title}>\n                                <div className='result-col light'>\n                                    {title}:\n                                </div>\n                                <div className='result-value'>\n                                    {value2 ? `${value}${unit} ~ ${value2}${unit}` : `${value}${unit}`}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            )\n        } else {\n            return <div className='err-message'>{message}</div>\n        }\n    }, [city, country, init, isLoading, main_description, result, resultData])\n\n    return (\n        <div className='search-container' ref={targetRef} >\n            <div className='search-bar'>\n                {inputs.map(({ title, key, value }) => (\n                    <div className='search-box' key={title}>\n                        <ResposeInput\n                            title={title}\n                            containerWidth={containerWidth}\n                            handleInputChange={handleInputChange}\n                            value={value}\n                            name={key}\n                            handleKeyDown={handleKeyDown}\n                        />\n                    </div>\n\n                ))}\n                <div className='search-box button-box'>\n                    <button onClick={() => handleSearch(inputCity, inputCountry)}>Search</button>\n                    <button onClick={() => handleClear()}>Clear</button>\n                </div>\n            </div>\n            {renderResult()}\n        </div>\n    )\n})\n\nconst ResposeInput = ({ containerWidth, value, handleInputChange, handleKeyDown, name, title }) => (\n    <>\n        {containerWidth > 600 &&\n            <span className='input-name'>{title}: </span>\n        }\n        <input\n            value={value}\n            onChange={(e) => handleInputChange(e)}\n            name={name}\n            autoFocus={title === 'City'}\n            onKeyDown={handleKeyDown}\n            placeholder={containerWidth > 600 ? '' : title}\n        />\n    </>\n)\n"]},"metadata":{},"sourceType":"module"}